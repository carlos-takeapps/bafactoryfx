//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("BAFactory.Fx.Security.MembershipSchemaModel", "FK_Actions_Modules", "Module", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BAFactory.Fx.Security.MembershipProvider.Module), "Action", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BAFactory.Fx.Security.MembershipProvider.Action), true)]
[assembly: EdmRelationshipAttribute("BAFactory.Fx.Security.MembershipSchemaModel", "FK_Permission_Actions", "Action", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BAFactory.Fx.Security.MembershipProvider.Action), "Permission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BAFactory.Fx.Security.MembershipProvider.Permission), true)]
[assembly: EdmRelationshipAttribute("BAFactory.Fx.Security.MembershipSchemaModel", "FK_RolesActions_Actions", "Action", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BAFactory.Fx.Security.MembershipProvider.Action), "RolesAction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BAFactory.Fx.Security.MembershipProvider.RoleAction), true)]
[assembly: EdmRelationshipAttribute("BAFactory.Fx.Security.MembershipSchemaModel", "FK_Modules_Areas", "Area", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BAFactory.Fx.Security.MembershipProvider.Area), "Module", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BAFactory.Fx.Security.MembershipProvider.Module), true)]
[assembly: EdmRelationshipAttribute("BAFactory.Fx.Security.MembershipSchemaModel", "FK_CompanyRolesViews_CompanyRoles", "Role", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BAFactory.Fx.Security.MembershipProvider.Role), "RolesAction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BAFactory.Fx.Security.MembershipProvider.RoleAction), true)]
[assembly: EdmRelationshipAttribute("BAFactory.Fx.Security.MembershipSchemaModel", "FK_UserOrganization_Organizations", "Organization", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BAFactory.Fx.Security.MembershipProvider.Organization), "UsersOrganization", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BAFactory.Fx.Security.MembershipProvider.UserOrganization), true)]
[assembly: EdmRelationshipAttribute("BAFactory.Fx.Security.MembershipSchemaModel", "FK_UsersCompanyRoles_CompanyRoles1", "Role", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BAFactory.Fx.Security.MembershipProvider.Role), "OrganizationsUsersRole", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BAFactory.Fx.Security.MembershipProvider.OrganizationUserRole), true)]
[assembly: EdmRelationshipAttribute("BAFactory.Fx.Security.MembershipSchemaModel", "FK_UserOrganization_Users", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BAFactory.Fx.Security.MembershipProvider.User), "UsersOrganization", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BAFactory.Fx.Security.MembershipProvider.UserOrganization), true)]
[assembly: EdmRelationshipAttribute("BAFactory.Fx.Security.MembershipSchemaModel", "FK_Permissions_UsersOrganizations", "UserOrganization", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BAFactory.Fx.Security.MembershipProvider.UserOrganization), "Permission", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BAFactory.Fx.Security.MembershipProvider.Permission), true)]
[assembly: EdmRelationshipAttribute("BAFactory.Fx.Security.MembershipSchemaModel", "FK_OrganizationsUsersRoles_UsersOrganizations", "UserOrganization", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BAFactory.Fx.Security.MembershipProvider.UserOrganization), "OrganizationUserRole", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BAFactory.Fx.Security.MembershipProvider.OrganizationUserRole), true)]

#endregion

namespace BAFactory.Fx.Security.MembershipProvider
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class MembershipSchemaEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new MembershipSchemaEntities object using the connection string found in the 'MembershipSchemaEntities' section of the application configuration file.
        /// </summary>
        public MembershipSchemaEntities() : base("name=MembershipSchemaEntities", "MembershipSchemaEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new MembershipSchemaEntities object.
        /// </summary>
        public MembershipSchemaEntities(string connectionString) : base(connectionString, "MembershipSchemaEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new MembershipSchemaEntities object.
        /// </summary>
        public MembershipSchemaEntities(EntityConnection connection) : base(connection, "MembershipSchemaEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Action> Actions
        {
            get
            {
                if ((_Actions == null))
                {
                    _Actions = base.CreateObjectSet<Action>("Actions");
                }
                return _Actions;
            }
        }
        private ObjectSet<Action> _Actions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Area> Areas
        {
            get
            {
                if ((_Areas == null))
                {
                    _Areas = base.CreateObjectSet<Area>("Areas");
                }
                return _Areas;
            }
        }
        private ObjectSet<Area> _Areas;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Module> Modules
        {
            get
            {
                if ((_Modules == null))
                {
                    _Modules = base.CreateObjectSet<Module>("Modules");
                }
                return _Modules;
            }
        }
        private ObjectSet<Module> _Modules;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Permission> Permissions
        {
            get
            {
                if ((_Permissions == null))
                {
                    _Permissions = base.CreateObjectSet<Permission>("Permissions");
                }
                return _Permissions;
            }
        }
        private ObjectSet<Permission> _Permissions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Role> Roles
        {
            get
            {
                if ((_Roles == null))
                {
                    _Roles = base.CreateObjectSet<Role>("Roles");
                }
                return _Roles;
            }
        }
        private ObjectSet<Role> _Roles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RoleAction> RoleActions
        {
            get
            {
                if ((_RoleActions == null))
                {
                    _RoleActions = base.CreateObjectSet<RoleAction>("RoleActions");
                }
                return _RoleActions;
            }
        }
        private ObjectSet<RoleAction> _RoleActions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Organization> Organizations
        {
            get
            {
                if ((_Organizations == null))
                {
                    _Organizations = base.CreateObjectSet<Organization>("Organizations");
                }
                return _Organizations;
            }
        }
        private ObjectSet<Organization> _Organizations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OrganizationUserRole> OrganizationUserRoles
        {
            get
            {
                if ((_OrganizationUserRoles == null))
                {
                    _OrganizationUserRoles = base.CreateObjectSet<OrganizationUserRole>("OrganizationUserRoles");
                }
                return _OrganizationUserRoles;
            }
        }
        private ObjectSet<OrganizationUserRole> _OrganizationUserRoles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UsersActionsLog> UsersActionsLogs
        {
            get
            {
                if ((_UsersActionsLogs == null))
                {
                    _UsersActionsLogs = base.CreateObjectSet<UsersActionsLog>("UsersActionsLogs");
                }
                return _UsersActionsLogs;
            }
        }
        private ObjectSet<UsersActionsLog> _UsersActionsLogs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserOrganization> UserOrganizations
        {
            get
            {
                if ((_UserOrganizations == null))
                {
                    _UserOrganizations = base.CreateObjectSet<UserOrganization>("UserOrganizations");
                }
                return _UserOrganizations;
            }
        }
        private ObjectSet<UserOrganization> _UserOrganizations;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Actions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToActions(Action action)
        {
            base.AddObject("Actions", action);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Areas EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAreas(Area area)
        {
            base.AddObject("Areas", area);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Modules EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToModules(Module module)
        {
            base.AddObject("Modules", module);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Permissions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPermissions(Permission permission)
        {
            base.AddObject("Permissions", permission);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Roles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoles(Role role)
        {
            base.AddObject("Roles", role);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RoleActions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRoleActions(RoleAction roleAction)
        {
            base.AddObject("RoleActions", roleAction);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Organizations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOrganizations(Organization organization)
        {
            base.AddObject("Organizations", organization);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OrganizationUserRoles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOrganizationUserRoles(OrganizationUserRole organizationUserRole)
        {
            base.AddObject("OrganizationUserRoles", organizationUserRole);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UsersActionsLogs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsersActionsLogs(UsersActionsLog usersActionsLog)
        {
            base.AddObject("UsersActionsLogs", usersActionsLog);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserOrganizations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserOrganizations(UserOrganization userOrganization)
        {
            base.AddObject("UserOrganizations", userOrganization);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BAFactory.Fx.Security.MembershipSchemaModel", Name="Action")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Action : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Action object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="idModule">Initial value of the IdModule property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static Action CreateAction(global::System.Int64 id, global::System.Int64 idModule, global::System.String name, global::System.String description)
        {
            Action action = new Action();
            action.Id = id;
            action.IdModule = idModule;
            action.Name = name;
            action.Description = description;
            return action;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 IdModule
        {
            get
            {
                return _IdModule;
            }
            set
            {
                OnIdModuleChanging(value);
                ReportPropertyChanging("IdModule");
                _IdModule = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdModule");
                OnIdModuleChanged();
            }
        }
        private global::System.Int64 _IdModule;
        partial void OnIdModuleChanging(global::System.Int64 value);
        partial void OnIdModuleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BAFactory.Fx.Security.MembershipSchemaModel", "FK_Actions_Modules", "Module")]
        public Module Module
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Module>("BAFactory.Fx.Security.MembershipSchemaModel.FK_Actions_Modules", "Module").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Module>("BAFactory.Fx.Security.MembershipSchemaModel.FK_Actions_Modules", "Module").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Module> ModuleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Module>("BAFactory.Fx.Security.MembershipSchemaModel.FK_Actions_Modules", "Module");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Module>("BAFactory.Fx.Security.MembershipSchemaModel.FK_Actions_Modules", "Module", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BAFactory.Fx.Security.MembershipSchemaModel", "FK_Permission_Actions", "Permission")]
        public EntityCollection<Permission> Permissions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Permission>("BAFactory.Fx.Security.MembershipSchemaModel.FK_Permission_Actions", "Permission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Permission>("BAFactory.Fx.Security.MembershipSchemaModel.FK_Permission_Actions", "Permission", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BAFactory.Fx.Security.MembershipSchemaModel", "FK_RolesActions_Actions", "RolesAction")]
        public EntityCollection<RoleAction> RolesActions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RoleAction>("BAFactory.Fx.Security.MembershipSchemaModel.FK_RolesActions_Actions", "RolesAction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RoleAction>("BAFactory.Fx.Security.MembershipSchemaModel.FK_RolesActions_Actions", "RolesAction", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BAFactory.Fx.Security.MembershipSchemaModel", Name="Area")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Area : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Area object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static Area CreateArea(global::System.Int64 id, global::System.String name, global::System.String description)
        {
            Area area = new Area();
            area.Id = id;
            area.Name = name;
            area.Description = description;
            return area;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BAFactory.Fx.Security.MembershipSchemaModel", "FK_Modules_Areas", "Module")]
        public EntityCollection<Module> Modules
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Module>("BAFactory.Fx.Security.MembershipSchemaModel.FK_Modules_Areas", "Module");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Module>("BAFactory.Fx.Security.MembershipSchemaModel.FK_Modules_Areas", "Module", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BAFactory.Fx.Security.MembershipSchemaModel", Name="Module")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Module : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Module object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="idArea">Initial value of the IdArea property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static Module CreateModule(global::System.Int64 id, global::System.Int64 idArea, global::System.String name, global::System.String description)
        {
            Module module = new Module();
            module.Id = id;
            module.IdArea = idArea;
            module.Name = name;
            module.Description = description;
            return module;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 IdArea
        {
            get
            {
                return _IdArea;
            }
            set
            {
                OnIdAreaChanging(value);
                ReportPropertyChanging("IdArea");
                _IdArea = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdArea");
                OnIdAreaChanged();
            }
        }
        private global::System.Int64 _IdArea;
        partial void OnIdAreaChanging(global::System.Int64 value);
        partial void OnIdAreaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BAFactory.Fx.Security.MembershipSchemaModel", "FK_Actions_Modules", "Action")]
        public EntityCollection<Action> Actions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Action>("BAFactory.Fx.Security.MembershipSchemaModel.FK_Actions_Modules", "Action");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Action>("BAFactory.Fx.Security.MembershipSchemaModel.FK_Actions_Modules", "Action", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BAFactory.Fx.Security.MembershipSchemaModel", "FK_Modules_Areas", "Area")]
        public Area Area
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Area>("BAFactory.Fx.Security.MembershipSchemaModel.FK_Modules_Areas", "Area").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Area>("BAFactory.Fx.Security.MembershipSchemaModel.FK_Modules_Areas", "Area").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Area> AreaReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Area>("BAFactory.Fx.Security.MembershipSchemaModel.FK_Modules_Areas", "Area");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Area>("BAFactory.Fx.Security.MembershipSchemaModel.FK_Modules_Areas", "Area", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BAFactory.Fx.Security.MembershipSchemaModel", Name="Organization")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Organization : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Organization object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static Organization CreateOrganization(global::System.Int64 id, global::System.String name, global::System.String description)
        {
            Organization organization = new Organization();
            organization.Id = id;
            organization.Name = name;
            organization.Description = description;
            return organization;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BAFactory.Fx.Security.MembershipSchemaModel", "FK_UserOrganization_Organizations", "UsersOrganization")]
        public EntityCollection<UserOrganization> UsersOrganizations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserOrganization>("BAFactory.Fx.Security.MembershipSchemaModel.FK_UserOrganization_Organizations", "UsersOrganization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserOrganization>("BAFactory.Fx.Security.MembershipSchemaModel.FK_UserOrganization_Organizations", "UsersOrganization", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BAFactory.Fx.Security.MembershipSchemaModel", Name="OrganizationUserRole")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OrganizationUserRole : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OrganizationUserRole object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        /// <param name="idRol">Initial value of the IdRol property.</param>
        /// <param name="idUserOrganizatin">Initial value of the IdUserOrganizatin property.</param>
        public static OrganizationUserRole CreateOrganizationUserRole(global::System.Int64 id, global::System.Int64 idRol, global::System.Int64 idUserOrganizatin)
        {
            OrganizationUserRole organizationUserRole = new OrganizationUserRole();
            organizationUserRole.id = id;
            organizationUserRole.IdRol = idRol;
            organizationUserRole.IdUserOrganizatin = idUserOrganizatin;
            return organizationUserRole;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int64 _id;
        partial void OnidChanging(global::System.Int64 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 IdRol
        {
            get
            {
                return _IdRol;
            }
            set
            {
                OnIdRolChanging(value);
                ReportPropertyChanging("IdRol");
                _IdRol = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdRol");
                OnIdRolChanged();
            }
        }
        private global::System.Int64 _IdRol;
        partial void OnIdRolChanging(global::System.Int64 value);
        partial void OnIdRolChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 IdUserOrganizatin
        {
            get
            {
                return _IdUserOrganizatin;
            }
            set
            {
                OnIdUserOrganizatinChanging(value);
                ReportPropertyChanging("IdUserOrganizatin");
                _IdUserOrganizatin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdUserOrganizatin");
                OnIdUserOrganizatinChanged();
            }
        }
        private global::System.Int64 _IdUserOrganizatin;
        partial void OnIdUserOrganizatinChanging(global::System.Int64 value);
        partial void OnIdUserOrganizatinChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BAFactory.Fx.Security.MembershipSchemaModel", "FK_UsersCompanyRoles_CompanyRoles1", "Role")]
        public Role Role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("BAFactory.Fx.Security.MembershipSchemaModel.FK_UsersCompanyRoles_CompanyRoles1", "Role").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("BAFactory.Fx.Security.MembershipSchemaModel.FK_UsersCompanyRoles_CompanyRoles1", "Role").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Role> RoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("BAFactory.Fx.Security.MembershipSchemaModel.FK_UsersCompanyRoles_CompanyRoles1", "Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Role>("BAFactory.Fx.Security.MembershipSchemaModel.FK_UsersCompanyRoles_CompanyRoles1", "Role", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BAFactory.Fx.Security.MembershipSchemaModel", "FK_OrganizationsUsersRoles_UsersOrganizations", "UserOrganization")]
        public UserOrganization UsersOrganization
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserOrganization>("BAFactory.Fx.Security.MembershipSchemaModel.FK_OrganizationsUsersRoles_UsersOrganizations", "UserOrganization").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserOrganization>("BAFactory.Fx.Security.MembershipSchemaModel.FK_OrganizationsUsersRoles_UsersOrganizations", "UserOrganization").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserOrganization> UsersOrganizationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserOrganization>("BAFactory.Fx.Security.MembershipSchemaModel.FK_OrganizationsUsersRoles_UsersOrganizations", "UserOrganization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserOrganization>("BAFactory.Fx.Security.MembershipSchemaModel.FK_OrganizationsUsersRoles_UsersOrganizations", "UserOrganization", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BAFactory.Fx.Security.MembershipSchemaModel", Name="Permission")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Permission : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Permission object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="idAction">Initial value of the IdAction property.</param>
        /// <param name="idUserOrganization">Initial value of the IdUserOrganization property.</param>
        public static Permission CreatePermission(global::System.Int64 id, global::System.Int64 idAction, global::System.Int64 idUserOrganization)
        {
            Permission permission = new Permission();
            permission.Id = id;
            permission.IdAction = idAction;
            permission.IdUserOrganization = idUserOrganization;
            return permission;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 IdAction
        {
            get
            {
                return _IdAction;
            }
            set
            {
                OnIdActionChanging(value);
                ReportPropertyChanging("IdAction");
                _IdAction = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdAction");
                OnIdActionChanged();
            }
        }
        private global::System.Int64 _IdAction;
        partial void OnIdActionChanging(global::System.Int64 value);
        partial void OnIdActionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 IdUserOrganization
        {
            get
            {
                return _IdUserOrganization;
            }
            set
            {
                OnIdUserOrganizationChanging(value);
                ReportPropertyChanging("IdUserOrganization");
                _IdUserOrganization = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdUserOrganization");
                OnIdUserOrganizationChanged();
            }
        }
        private global::System.Int64 _IdUserOrganization;
        partial void OnIdUserOrganizationChanging(global::System.Int64 value);
        partial void OnIdUserOrganizationChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BAFactory.Fx.Security.MembershipSchemaModel", "FK_Permission_Actions", "Action")]
        public Action Action
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Action>("BAFactory.Fx.Security.MembershipSchemaModel.FK_Permission_Actions", "Action").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Action>("BAFactory.Fx.Security.MembershipSchemaModel.FK_Permission_Actions", "Action").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Action> ActionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Action>("BAFactory.Fx.Security.MembershipSchemaModel.FK_Permission_Actions", "Action");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Action>("BAFactory.Fx.Security.MembershipSchemaModel.FK_Permission_Actions", "Action", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BAFactory.Fx.Security.MembershipSchemaModel", "FK_Permissions_UsersOrganizations", "UserOrganization")]
        public UserOrganization UsersOrganization
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserOrganization>("BAFactory.Fx.Security.MembershipSchemaModel.FK_Permissions_UsersOrganizations", "UserOrganization").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserOrganization>("BAFactory.Fx.Security.MembershipSchemaModel.FK_Permissions_UsersOrganizations", "UserOrganization").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<UserOrganization> UsersOrganizationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<UserOrganization>("BAFactory.Fx.Security.MembershipSchemaModel.FK_Permissions_UsersOrganizations", "UserOrganization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<UserOrganization>("BAFactory.Fx.Security.MembershipSchemaModel.FK_Permissions_UsersOrganizations", "UserOrganization", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BAFactory.Fx.Security.MembershipSchemaModel", Name="Role")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Role : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Role object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static Role CreateRole(global::System.Int64 id, global::System.String name, global::System.String description)
        {
            Role role = new Role();
            role.Id = id;
            role.Name = name;
            role.Description = description;
            return role;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BAFactory.Fx.Security.MembershipSchemaModel", "FK_CompanyRolesViews_CompanyRoles", "RolesAction")]
        public EntityCollection<RoleAction> RolesActions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RoleAction>("BAFactory.Fx.Security.MembershipSchemaModel.FK_CompanyRolesViews_CompanyRoles", "RolesAction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RoleAction>("BAFactory.Fx.Security.MembershipSchemaModel.FK_CompanyRolesViews_CompanyRoles", "RolesAction", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BAFactory.Fx.Security.MembershipSchemaModel", "FK_UsersCompanyRoles_CompanyRoles1", "OrganizationsUsersRole")]
        public EntityCollection<OrganizationUserRole> OrganizationsUsersRoles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OrganizationUserRole>("BAFactory.Fx.Security.MembershipSchemaModel.FK_UsersCompanyRoles_CompanyRoles1", "OrganizationsUsersRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OrganizationUserRole>("BAFactory.Fx.Security.MembershipSchemaModel.FK_UsersCompanyRoles_CompanyRoles1", "OrganizationsUsersRole", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BAFactory.Fx.Security.MembershipSchemaModel", Name="RoleAction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RoleAction : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RoleAction object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="idRol">Initial value of the IdRol property.</param>
        /// <param name="idAction">Initial value of the IdAction property.</param>
        public static RoleAction CreateRoleAction(global::System.Int64 id, global::System.Int64 idRol, global::System.Int64 idAction)
        {
            RoleAction roleAction = new RoleAction();
            roleAction.Id = id;
            roleAction.IdRol = idRol;
            roleAction.IdAction = idAction;
            return roleAction;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 IdRol
        {
            get
            {
                return _IdRol;
            }
            set
            {
                OnIdRolChanging(value);
                ReportPropertyChanging("IdRol");
                _IdRol = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdRol");
                OnIdRolChanged();
            }
        }
        private global::System.Int64 _IdRol;
        partial void OnIdRolChanging(global::System.Int64 value);
        partial void OnIdRolChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 IdAction
        {
            get
            {
                return _IdAction;
            }
            set
            {
                OnIdActionChanging(value);
                ReportPropertyChanging("IdAction");
                _IdAction = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdAction");
                OnIdActionChanged();
            }
        }
        private global::System.Int64 _IdAction;
        partial void OnIdActionChanging(global::System.Int64 value);
        partial void OnIdActionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BAFactory.Fx.Security.MembershipSchemaModel", "FK_RolesActions_Actions", "Action")]
        public Action Action
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Action>("BAFactory.Fx.Security.MembershipSchemaModel.FK_RolesActions_Actions", "Action").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Action>("BAFactory.Fx.Security.MembershipSchemaModel.FK_RolesActions_Actions", "Action").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Action> ActionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Action>("BAFactory.Fx.Security.MembershipSchemaModel.FK_RolesActions_Actions", "Action");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Action>("BAFactory.Fx.Security.MembershipSchemaModel.FK_RolesActions_Actions", "Action", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BAFactory.Fx.Security.MembershipSchemaModel", "FK_CompanyRolesViews_CompanyRoles", "Role")]
        public Role Role
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("BAFactory.Fx.Security.MembershipSchemaModel.FK_CompanyRolesViews_CompanyRoles", "Role").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("BAFactory.Fx.Security.MembershipSchemaModel.FK_CompanyRolesViews_CompanyRoles", "Role").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Role> RoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Role>("BAFactory.Fx.Security.MembershipSchemaModel.FK_CompanyRolesViews_CompanyRoles", "Role");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Role>("BAFactory.Fx.Security.MembershipSchemaModel.FK_CompanyRolesViews_CompanyRoles", "Role", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BAFactory.Fx.Security.MembershipSchemaModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="fullName">Initial value of the FullName property.</param>
        public static User CreateUser(global::System.Int64 id, global::System.String userName, global::System.String password, global::System.String fullName)
        {
            User user = new User();
            user.Id = id;
            user.UserName = userName;
            user.Password = password;
            user.FullName = fullName;
            return user;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                OnFullNameChanging(value);
                ReportPropertyChanging("FullName");
                _FullName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FullName");
                OnFullNameChanged();
            }
        }
        private global::System.String _FullName;
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String email
        {
            get
            {
                return _email;
            }
            set
            {
                OnemailChanging(value);
                ReportPropertyChanging("email");
                _email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("email");
                OnemailChanged();
            }
        }
        private global::System.String _email;
        partial void OnemailChanging(global::System.String value);
        partial void OnemailChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BAFactory.Fx.Security.MembershipSchemaModel", "FK_UserOrganization_Users", "UsersOrganization")]
        public EntityCollection<UserOrganization> UsersOrganizations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserOrganization>("BAFactory.Fx.Security.MembershipSchemaModel.FK_UserOrganization_Users", "UsersOrganization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserOrganization>("BAFactory.Fx.Security.MembershipSchemaModel.FK_UserOrganization_Users", "UsersOrganization", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BAFactory.Fx.Security.MembershipSchemaModel", Name="UserOrganization")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserOrganization : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserOrganization object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="idUser">Initial value of the IdUser property.</param>
        /// <param name="idOrganization">Initial value of the IdOrganization property.</param>
        public static UserOrganization CreateUserOrganization(global::System.Int64 id, global::System.Int64 idUser, global::System.Int64 idOrganization)
        {
            UserOrganization userOrganization = new UserOrganization();
            userOrganization.Id = id;
            userOrganization.IdUser = idUser;
            userOrganization.IdOrganization = idOrganization;
            return userOrganization;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 IdUser
        {
            get
            {
                return _IdUser;
            }
            set
            {
                OnIdUserChanging(value);
                ReportPropertyChanging("IdUser");
                _IdUser = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdUser");
                OnIdUserChanged();
            }
        }
        private global::System.Int64 _IdUser;
        partial void OnIdUserChanging(global::System.Int64 value);
        partial void OnIdUserChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 IdOrganization
        {
            get
            {
                return _IdOrganization;
            }
            set
            {
                OnIdOrganizationChanging(value);
                ReportPropertyChanging("IdOrganization");
                _IdOrganization = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IdOrganization");
                OnIdOrganizationChanged();
            }
        }
        private global::System.Int64 _IdOrganization;
        partial void OnIdOrganizationChanging(global::System.Int64 value);
        partial void OnIdOrganizationChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BAFactory.Fx.Security.MembershipSchemaModel", "FK_UserOrganization_Organizations", "Organization")]
        public Organization Organization
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("BAFactory.Fx.Security.MembershipSchemaModel.FK_UserOrganization_Organizations", "Organization").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("BAFactory.Fx.Security.MembershipSchemaModel.FK_UserOrganization_Organizations", "Organization").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Organization> OrganizationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organization>("BAFactory.Fx.Security.MembershipSchemaModel.FK_UserOrganization_Organizations", "Organization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Organization>("BAFactory.Fx.Security.MembershipSchemaModel.FK_UserOrganization_Organizations", "Organization", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BAFactory.Fx.Security.MembershipSchemaModel", "FK_UserOrganization_Users", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BAFactory.Fx.Security.MembershipSchemaModel.FK_UserOrganization_Users", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BAFactory.Fx.Security.MembershipSchemaModel.FK_UserOrganization_Users", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("BAFactory.Fx.Security.MembershipSchemaModel.FK_UserOrganization_Users", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("BAFactory.Fx.Security.MembershipSchemaModel.FK_UserOrganization_Users", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BAFactory.Fx.Security.MembershipSchemaModel", "FK_Permissions_UsersOrganizations", "Permission")]
        public EntityCollection<Permission> Permissions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Permission>("BAFactory.Fx.Security.MembershipSchemaModel.FK_Permissions_UsersOrganizations", "Permission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Permission>("BAFactory.Fx.Security.MembershipSchemaModel.FK_Permissions_UsersOrganizations", "Permission", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BAFactory.Fx.Security.MembershipSchemaModel", "FK_OrganizationsUsersRoles_UsersOrganizations", "OrganizationUserRole")]
        public EntityCollection<OrganizationUserRole> OrganizationsUsersRoles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OrganizationUserRole>("BAFactory.Fx.Security.MembershipSchemaModel.FK_OrganizationsUsersRoles_UsersOrganizations", "OrganizationUserRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OrganizationUserRole>("BAFactory.Fx.Security.MembershipSchemaModel.FK_OrganizationsUsersRoles_UsersOrganizations", "OrganizationUserRole", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BAFactory.Fx.Security.MembershipSchemaModel", Name="UsersActionsLog")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UsersActionsLog : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UsersActionsLog object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="moduleName">Initial value of the ModuleName property.</param>
        /// <param name="actionName">Initial value of the ActionName property.</param>
        /// <param name="url">Initial value of the Url property.</param>
        public static UsersActionsLog CreateUsersActionsLog(global::System.Int64 id, global::System.DateTime date, global::System.String moduleName, global::System.String actionName, global::System.String url)
        {
            UsersActionsLog usersActionsLog = new UsersActionsLog();
            usersActionsLog.Id = id;
            usersActionsLog.Date = date;
            usersActionsLog.ModuleName = moduleName;
            usersActionsLog.ActionName = actionName;
            usersActionsLog.Url = url;
            return usersActionsLog;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ModuleName
        {
            get
            {
                return _ModuleName;
            }
            set
            {
                OnModuleNameChanging(value);
                ReportPropertyChanging("ModuleName");
                _ModuleName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ModuleName");
                OnModuleNameChanged();
            }
        }
        private global::System.String _ModuleName;
        partial void OnModuleNameChanging(global::System.String value);
        partial void OnModuleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ActionName
        {
            get
            {
                return _ActionName;
            }
            set
            {
                OnActionNameChanging(value);
                ReportPropertyChanging("ActionName");
                _ActionName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ActionName");
                OnActionNameChanged();
            }
        }
        private global::System.String _ActionName;
        partial void OnActionNameChanging(global::System.String value);
        partial void OnActionNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Url
        {
            get
            {
                return _Url;
            }
            set
            {
                OnUrlChanging(value);
                ReportPropertyChanging("Url");
                _Url = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Url");
                OnUrlChanged();
            }
        }
        private global::System.String _Url;
        partial void OnUrlChanging(global::System.String value);
        partial void OnUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> EntityId
        {
            get
            {
                return _EntityId;
            }
            set
            {
                OnEntityIdChanging(value);
                ReportPropertyChanging("EntityId");
                _EntityId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EntityId");
                OnEntityIdChanged();
            }
        }
        private Nullable<global::System.Int64> _EntityId;
        partial void OnEntityIdChanging(Nullable<global::System.Int64> value);
        partial void OnEntityIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Detail
        {
            get
            {
                return _Detail;
            }
            set
            {
                OnDetailChanging(value);
                ReportPropertyChanging("Detail");
                _Detail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Detail");
                OnDetailChanged();
            }
        }
        private global::System.String _Detail;
        partial void OnDetailChanging(global::System.String value);
        partial void OnDetailChanged();

        #endregion
    
    }

    #endregion
    
}
